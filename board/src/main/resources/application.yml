spring:
  application:
    name: board
  lifecycle:
    timeout-per-shutdown-phase: 30s
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://my-board-db:3306/mydb
    username: root
    password: pwd1234
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate:
        hibernate.format_sql: true
        show_sql: true
        default_batch_fetch_size: 100
    open-in-view: false # view 단 까지 세션 열지 않게 설정
  data:
    redis:
      host: my-cache-server
      port: 6379
      timeout: 2000
      jedis:
        pool:
          max-idle: 10 # 연결 풀에서 유지될 수 있는 최대 유휴 연결 수
          min-idle: 2 # 연결 풀에서 유지될 최소 유휴 연결 수
          max-active: 10 # 연결 풀에서 동시에 활성화된 최대 연결 수
          max-wait: 2000 # 연결을 얻을 때 대기할 수 있는 최대 시간
  kafka:
    producer:
      bootstrap-servers: kafka:9093  # Kafka 브로커 주소
      key-serializer: org.apache.kafka.common.serialization.StringSerializer  # 키 직렬화기
      value-serializer: org.apache.kafka.common.serialization.StringSerializer  # 값 직렬화기
    consumer:
      bootstrap-servers: kafka:9093  # Kafka 브로커 주소
      group-id: board-service  # Consumer 그룹 ID
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer  # 키 역직렬화기
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer  # 값 역직렬화기

# jwt
jwt:
  secret: 3541c154-0a34-4478-aecf-bd0b3badc63c
  expirationInMs: 86400000

# logging
logging:
  level:
    org:
      hibernate:
        sql: debug
        type: trace
      springframework:
        security: debug
        web: debug

# swagger
springdoc:
  api-docs:
    path: /v3/api-docs  # API docs 경로

# graceful
server:
  shutdown: graceful